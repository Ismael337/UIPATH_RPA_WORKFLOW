<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:uga="clr-namespace:UiPath.GoogleCloud.Activities;assembly=UiPath.GoogleCloud.Activities" xmlns:ugc="clr-namespace:UiPath.GoogleCloud.Core;assembly=UiPath.GoogleCloud" xmlns:ugm="clr-namespace:UiPath.GoogleCloud.Models;assembly=UiPath.GoogleCloud" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Action_StartStopDeallocateDelete" Type="InArgument(x:String)" />
    <x:Property Name="VM_Name" Type="InArgument(x:String)" />
    <x:Property Name="Token" Type="InArgument(x:String)" />
    <x:Property Name="TenantLogicalName" Type="InArgument(x:String)" />
    <x:Property Name="TenantService" Type="InArgument(x:String)" />
    <x:Property Name="Url" Type="InArgument(x:String)" />
    <x:Property Name="clientOrchestratorIsOnprem" Type="InArgument(x:Boolean)" />
    <x:Property Name="FolderId" Type="InArgument(x:String)" />
    <x:Property Name="clientEnvironmentLevelCounters" Type="InArgument(x:Boolean)" />
    <x:Property Name="clientEnvironmentReleases" Type="InArgument(scg:List(x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="can have duplicates for high density robots" Name="specificRobotsMachines" Type="OutArgument(scg:List(x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="can have duplicates for high density robots" Name="unattendedRobotsMachines" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="FolderIsModern" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1139.2,1493.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="27">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Azure.Models</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Azure.Activities</x:String>
      <x:String>UiPath.GoogleCloud.Activities</x:String>
      <x:String>UiPath.GoogleCloud.Models</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Azure</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.AmazonWebServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Azure.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GoogleCloud.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GoogleCloud</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1032.8,1388.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Azure_TenantId" />
      <Variable x:TypeArguments="x:String" Name="Azure_ClientId" />
      <Variable x:TypeArguments="x:String" Name="Azure_ClientSecret" />
      <Variable x:TypeArguments="x:String" Name="Azure_SubscriptionID" />
      <Variable x:TypeArguments="x:String" Name="ResourceGroup_Name" />
      <Variable x:TypeArguments="x:Int32" Name="pendingJobsNow" />
      <Variable x:TypeArguments="x:String" Name="GCP_Project" />
      <Variable x:TypeArguments="x:String" Name="GCP_Zone" />
      <Variable x:TypeArguments="x:String" Name="GCP_ServiceAccountKey" />
      <Variable x:TypeArguments="ugm:GCPInstance" Name="VM_Object" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get GCP Credentials from Assets Sequence" sap:VirtualizedContainerService.HintSize="991.2,331.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="ss:SecureString" Name="azure_clientsecret_secure" />
        <Variable x:TypeArguments="ss:SecureString" Name="azure_clientid_secure" />
        <Variable x:TypeArguments="ss:SecureString" Name="azure_tenantid_secure" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="GCP_Project" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[GCP_Project]</OutArgument>
        </ui:GetRobotAsset.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetRobotAsset>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="GCP_Zone" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[GCP_Zone]</OutArgument>
        </ui:GetRobotAsset.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetRobotAsset>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="GCP_ServiceAccountKey" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[GCP_ServiceAccountKey]</OutArgument>
        </ui:GetRobotAsset.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetRobotAsset>
    </Sequence>
    <uga:GCPScope ServiceAccountKeyFromFile="{x:Null}" DisplayName="Google Cloud Scope" sap:VirtualizedContainerService.HintSize="991.2,924.8" sap2010:WorkflowViewState.IdRef="GCPScope_1" ScopeType="ServiceAccountKey" ServiceAccountKey="[New System.Net.NetworkCredential(&quot;&quot;,GCP_ServiceAccountKey).SecurePassword]">
      <uga:GCPScope.Body>
        <ActivityAction x:TypeArguments="ugc:GCPCmd">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ugc:GCPCmd" Name="GoogleCloudScopePropertyTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="GCP Scope Do - Sequence" sap:VirtualizedContainerService.HintSize="957.6,838.4" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Get VM Sequence" sap:VirtualizedContainerService.HintSize="916,145.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="GetVM - Try Catch" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <uga:GCPGetInstance DisplayName="Get Instance" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GCPGetInstance_1" Instance="[VM_Object]" InstanceName="[VM_Name]" ProjectId="[GCP_Project]" Zone="[GCP_Zone]" />
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,130.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ugm:GCPInstance">[VM_Object]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ugm:GCPInstance">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
            <If Condition="[VM_Object IsNot Nothing]" DisplayName="If VM found" sap:VirtualizedContainerService.HintSize="916,560" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="538.4,410.4" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke OrchestratorTenant_GetPendingJobs workflow" sap:VirtualizedContainerService.HintSize="496.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="OrchestratorTenant_GetPendingJobs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="Token">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Token" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TenantLogicalName">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TenantLogicalName" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TenantService">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TenantService" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Url">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Url" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="clientOrchestratorIsOnprem">
                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="clientOrchestratorIsOnprem" />
                      </InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="PendingJobsCount">
                        <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="pendingJobsNow" />
                      </OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="FolderId">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FolderId" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="clientEnvironmentLevelCounters">
                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="clientEnvironmentLevelCounters" />
                      </InArgument>
                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="clientEnvironmentReleases">
                        <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="clientEnvironmentReleases" />
                      </InArgument>
                      <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="specificRobotsMachines" />
                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="unattendedRobotsMachines">
                        <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="unattendedRobotsMachines" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="FolderIsModern">
                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="FolderIsModern" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Switch x:TypeArguments="x:String" DisplayName="VM Action - Switch" Expression="[Action_StartStopDeallocateDelete]" sap:VirtualizedContainerService.HintSize="496.8,164" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                    <Switch.Default>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="210.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[&quot;Action &lt;&quot; + Action_StartStopDeallocateDelete + &quot;&gt; not available.&quot;]" />
                    </Switch.Default>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If x:Key="stop" Condition="[VM_Object.Status.ToString IsNot InstanceStatus.Stopping.ToString and VM_Object.Status.ToString IsNot InstanceStatus.Terminated.ToString and VM_Object.Status.ToString IsNot InstanceStatus.Suspended.ToString and VM_Object.Status.ToString IsNot InstanceStatus.Suspending.ToString]" DisplayName="If not already deallocated or stopped " sap:VirtualizedContainerService.HintSize="1549.6,943.2" sap2010:WorkflowViewState.IdRef="If_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <If Condition="[pendingJobsNow = 0]" DisplayName="If any PendingJobsNow" sap:VirtualizedContainerService.HintSize="1172,793.6" sap2010:WorkflowViewState.IdRef="If_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="794.4,644" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Int32" Name="machineBusyRobotsCount" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke OrchestratorTenant_MachineBusyRobots workflow" sap:VirtualizedContainerService.HintSize="752.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="OrchestratorTenant_MachineBusyRobots.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="Token">[Token]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TenantLogicalName">[TenantLogicalName]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TenantService">[TenantService]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Url">[Url]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="clientOrchestratorIsOnprem">[clientOrchestratorIsOnprem]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="FolderId">[FolderId]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="clientEnvironmentLevelCounters">[clientEnvironmentLevelCounters]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="MachineName">[VM_Object.Name]</InArgument>
                                  <OutArgument x:TypeArguments="x:Int32" x:Key="RobotsBusyCount">[machineBusyRobotsCount]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[machineBusyRobotsCount = 0]" sap:VirtualizedContainerService.HintSize="752.8,397.6" sap2010:WorkflowViewState.IdRef="If_9">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <uga:GCPStopInstance DisplayName="Stop Instance" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="GCPStopInstance_1" Instance="[VM_Object]" Timeout="[600]" WaitForCompletion="False" />
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  deallocated.&quot;]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Skipped VM  &quot;+VM_Object.Name + &quot;  deallocation: machineBusyRobotsCount is now &gt; 0&quot;]" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Skipped VM  &quot;+VM_Object.Name + &quot;  deallocation: pendingJobsNow is &gt; 0&quot;]" />
                          </If.Else>
                        </If>
                      </If.Then>
                      <If.Else>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  is already deallocated / deallocationg / stopped / stopping.&quot;]" />
                      </If.Else>
                    </If>
                    <If x:Key="start" Condition="[VM_Object.Status.ToString IsNot InstanceStatus.Running.ToString]" DisplayName="If not already started" sap:VirtualizedContainerService.HintSize="1130.4,547.2" sap2010:WorkflowViewState.IdRef="If_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <If Condition="[pendingJobsNow &gt; 0]" DisplayName="If any PendingJobsNow" sap:VirtualizedContainerService.HintSize="752.8,397.6" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <uga:GCPStartInstance DisplayName="Start Instance" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="GCPStartInstance_1" Instance="[VM_Object]" Timeout="[600]" WaitForCompletion="False" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  started.&quot;]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Skipped VM  &quot;+VM_Object.Name + &quot;  start: pendingJobsNow is 0&quot;]" />
                          </If.Else>
                        </If>
                      </If.Then>
                      <If.Else>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  is already started or starting.&quot;]" />
                      </If.Else>
                    </If>
                  </Switch>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Failed to Get VM:  &quot;+VM_Name]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </uga:GCPScope.Body>
    </uga:GCPScope>
  </Sequence>
</Activity>