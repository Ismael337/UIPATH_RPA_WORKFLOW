<Activity mc:Ignorable="sap sap2010" x:Class="ProcessAlerts" this:ProcessAlerts.NewSecurityRule_NamePrefix="UiPath_Robot_BlockAttackerIP - " this:ProcessAlerts.AlertsQueueName="Test_AzureSecurityAlerts" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:uaa="clr-namespace:UiPath.Azure.Activities;assembly=UiPath.Azure.Activities" xmlns:uac="clr-namespace:UiPath.Azure.Core;assembly=UiPath.Azure" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="NewSecurityRule_NamePrefix" Type="InArgument(x:String)" />
    <x:Property Name="AlertsQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>899.2,2899.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessAlerts_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Security.SecureString</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Azure</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProcessAlerts" sap:VirtualizedContainerService.HintSize="879.2,2839.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Default="[{}]" Name="QueueItems" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Default="[{}]" Name="tempQueueItems" />
      <Variable x:TypeArguments="x:String" Name="Azure_TenantID" />
      <Variable x:TypeArguments="x:String" Name="Azure_ClientID" />
      <Variable x:TypeArguments="x:String" Name="Azure_ClientSecret" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get Assets for Auth Sequence" sap:VirtualizedContainerService.HintSize="837.6,574.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="ss:SecureString" Name="azure_tenantid_secure" />
        <Variable x:TypeArguments="ss:SecureString" Name="azure_clientid_secure" />
        <Variable x:TypeArguments="ss:SecureString" Name="azure_clientsecret_secure" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="337.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Getting Azure credentials from Assets..&quot;]" />
      <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="AzureAuth_TenantID" DisplayName="Azure TenantID - Get Credential" sap:VirtualizedContainerService.HintSize="337.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[azure_tenantid_secure]" />
      <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="AzureAuth_ClientID" DisplayName="Azure ClientID - Get Credential" sap:VirtualizedContainerService.HintSize="337.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[azure_clientid_secure]" />
      <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="AzureAuth_ClientSecret" DisplayName="Azure_ClientSecret - Get Credential" sap:VirtualizedContainerService.HintSize="337.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3" Password="[azure_clientsecret_secure]" />
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="337.6,161.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[Azure_TenantID]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, azure_tenantid_secure).Password]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[Azure_ClientID]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, azure_clientid_secure).Password]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[Azure_ClientSecret]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, azure_clientsecret_secure).Password]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="Get Queue Items" sap:VirtualizedContainerService.HintSize="837.6,773.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="skipQueueItems" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[skipQueueItems]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="483.2,448" sap2010:WorkflowViewState.IdRef="DoWhile_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <DoWhile.Condition>[tempQueueItems.Count() &gt; 0]</DoWhile.Condition>
        <Sequence sap:VirtualizedContainerService.HintSize="379.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get New &amp; Failed Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="337.6,22.4" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New, Failed" QueueName="[AlertsQueueName]" Result="[tempQueueItems]" Skip="[skipQueueItems]" Top="100" />
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="337.6,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="scg:IEnumerable(ui:QueueItem)">[QueueItems]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="scg:IEnumerable(ui:QueueItem)">[tempQueueItems.Concat(QueueItems).ToArray()]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[skipQueueItems]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">[skipQueueItems + tempQueueItems.Count()]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </DoWhile>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Retrieved &quot; + QueueItems.Count().ToString + &quot; alerts from Orchestrator Queue..&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Process Queued Alerts Sequence" sap:VirtualizedContainerService.HintSize="837.6,1318.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each Alert" sap:VirtualizedContainerService.HintSize="796,1225.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[QueueItems]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="ui:QueueItem">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="alert" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Foreach Alert Sequence" sap:VirtualizedContainerService.HintSize="760.8,1091.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="BlockIP_DismissAlert" />
                <Variable x:TypeArguments="x:String" Name="BlockIP_Messages" />
                <Variable x:TypeArguments="x:String" Name="BlockIP_Errors" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetQueueItem ContinueOnError="{x:Null}" TransactionItem="{x:Null}" DisplayName="Private: Set QItem InProgress - Get Transaction Item" FilterStrategy="Equals" sap:VirtualizedContainerService.HintSize="719.2,22.4" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="[AlertsQueueName]" Reference="[alert.Reference]" TimeoutMS="60000" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="719.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Block_AttackerIP_in_VM_NSGs.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="AttackerIP">[alert.SpecificContent("Attack_IP").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="VM_Name">[alert.SpecificContent("VM_Name").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Azure_SubscriptionID">[alert.SpecificContent("VM_SubscriptionID").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="VM_ResourceGroup">[alert.SpecificContent("VM_ResourceGroup").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="NewSecurityRule_NamePrefix">[NewSecurityRule_NamePrefix]</InArgument>
                  <OutArgument x:TypeArguments="x:Boolean" x:Key="DismissAlert">[BlockIP_DismissAlert]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="Errors">[BlockIP_Errors]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="Messages">[BlockIP_Messages]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[BlockIP_DismissAlert]" DisplayName="If Alert Processed" sap:VirtualizedContainerService.HintSize="719.2,506.4" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="475.2,356.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uaa:AzureScope ClientId="[Azure_ClientID]" ClientSecret="[new System.Net.NetworkCredential(string.Empty, Azure_ClientSecret).SecurePassword]" DisplayName="Dismiss Alert - Azure Scope" EnvironmentType="Global" sap:VirtualizedContainerService.HintSize="433.6,201.6" sap2010:WorkflowViewState.IdRef="AzureScope_1" SubscriptionId="[alert.SpecificContent(&quot;VM_SubscriptionID&quot;).ToString()]" TenantId="[Azure_TenantID]">
                      <uaa:AzureScope.Body>
                        <ActivityAction x:TypeArguments="uac:AzureCmd">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="uac:AzureCmd" Name="AzureScopePropertyTag" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <uaa:AzureSetSecurityAlertState DisplayName="Set Security Alert State" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AzureSetSecurityAlertState_1" Location="[alert.SpecificContent(&quot;Alert_Location&quot;).ToString()]" NewState="Dismissed" ResourceGroupName="[alert.SpecificContent(&quot;VM_ResourceGroup&quot;).ToString()]" UniqueName="[alert.SpecificContent(&quot;Alert_Reference&quot;).ToString()]" />
                          </Sequence>
                        </ActivityAction>
                      </uaa:AzureScope.Body>
                    </uaa:AzureScope>
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Private: Success - Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="433.6,22.4" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful" TransactionItem="[alert]">
                      <ui:SetTransactionStatus.Analytics>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Analytics>
                      <ui:SetTransactionStatus.Output>
                        <InArgument x:TypeArguments="x:String" x:Key="Result">[BlockIP_Messages]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Errors">[BlockIP_Errors]</InArgument>
                      </ui:SetTransactionStatus.Output>
                    </ui:SetTransactionStatus>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" Details="[BlockIP_Messages + Environment.NewLine + Environment.NewLine + BlockIP_Errors]" DisplayName="Private: Qitem Failed - Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_2" Reason="Alert processing failed, will retry." Status="Failed" TransactionItem="[alert]">
                    <ui:SetTransactionStatus.Analytics>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                    </ui:SetTransactionStatus.Analytics>
                    <ui:SetTransactionStatus.Output>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                    </ui:SetTransactionStatus.Output>
                  </ui:SetTransactionStatus>
                </If.Else>
              </If>
              <If sap2010:Annotation.AnnotationText="(customize) Add Extra Steps:&#xD;&#xA;notify an Admin about the Errors via Email / Ticket in IT Helpdesk, .." Condition="[BlockIP_Errors IsNot Nothing]" DisplayName="If Errors" sap:VirtualizedContainerService.HintSize="719.2,128.8" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </If>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="719.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Done processing VM &quot; + alert.SpecificContent(&quot;VM_Name&quot;).ToString() + &quot; attacked by IP &quot; + string.Format(&quot;{0}&quot;, alert.SpecificContent(&quot;Attack_IP&quot;))  + &quot; from Alert &quot; +  alert.Reference.ToString()]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>