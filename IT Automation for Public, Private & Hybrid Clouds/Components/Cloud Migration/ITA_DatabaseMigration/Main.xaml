<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sma="clr-namespace:System.Management.Automation;assembly=System.Management.Automation" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_resourceGroupName" Type="InArgument(x:String)" />
    <x:Property Name="in_location" Type="InArgument(x:String)" />
    <x:Property Name="in_storageAccountName" Type="InArgument(x:String)" />
    <x:Property Name="in_storageContainerName" Type="InArgument(x:String)" />
    <x:Property Name="in_serverName" Type="InArgument(x:String)" />
    <x:Property Name="in_storageKey" Type="InArgument(x:String)" />
    <x:Property Name="in_databaseName" Type="InArgument(x:String)" />
    <x:Property Name="in_subscriptionID" Type="InArgument(x:String)" />
    <x:Property Name="in_StorageUri" Type="InArgument(x:String)" />
    <x:Property Name="in_adminSqlLogin" Type="InArgument(x:String)" />
    <x:Property Name="in_sqlAdminPassword" Type="InArgument(x:String)" />
    <x:Property Name="in_serviceObjectiveName" Type="InArgument(x:String)" />
    <x:Property Name="in_bacpacFileName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>500,1613</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="54">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.VMware</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>UiPath.Azure.Models</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.VMware</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>UiPath.Azure</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="480,1513" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="getAssetsFromOrchestrator" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="438,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Start Database Migration&quot;]" />
    <TryCatch DisplayName="Try migration" sap:VirtualizedContainerService.HintSize="438,1290" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="376,1063" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Comment sap:VirtualizedContainerService.HintSize="334,74" sap2010:WorkflowViewState.IdRef="Comment_1" Text="One of the prerequisites is to have Azure PowerShell installed" />
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Set subscription " CommandText="[&quot;Set-AzContext -SubscriptionId &quot; + in_subscriptionID]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_2" IsScript="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Create a resource group" CommandText="[&quot;$resourcegroup = New-AzResourceGroup -Name &quot; +in_resourceGroupName  + &quot; -Location &quot; + in_location]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_8" IsScript="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Create a storage account" CommandText="[&quot;$storageAccount = New-AzStorageAccount -ResourceGroupName &quot; + in_resourceGroupName + &quot; -AccountName &quot; + in_storageAccountName + &quot; -Location &quot; + in_location + &quot; -Type &quot;&quot;Standard_LRS&quot;&quot;&quot;]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_9" IsScript="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Create a storage container" CommandText="$storageContainer = New-AzStorageContainer -Name $storageContainerName `&#xA;    -Context $(New-AzStorageContext -StorageAccountName $storageAccountName `&#xA;        -StorageAccountKey $(Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -StorageAccountName $storageAccountName).Value[0])" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_10" IsScript="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Upload sample database into storage container" CommandText="[&quot;Set-AzStorageBlobContent -Container &quot; + in_storagecontainername + &quot; -File &quot; + in_bacpacFilename + &quot; -Context $(New-AzStorageContext -StorageAccountName &quot; + in_storageAccountName + &quot; -StorageAccountKey $(Get-AzStorageAccountKey -ResourceGroupName &quot; +  in_resourceGroupName + &quot; -StorageAccountName &quot; + in_storageAccountName + &quot;).Value[0])&quot;]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Import bacpac to database" CommandText="[&quot;$importRequest = New-AzSqlDatabaseImport -ResourceGroupName &quot; + in_resourceGroupName + &quot; -ServerName &quot; + in_serverName + &quot; -DatabaseName &quot; + in_databaseName + &quot; -DatabaseMaxSizeBytes &quot;&quot;262144000&quot;&quot; -StorageKeyType &quot;&quot;StorageAccessKey&quot;&quot; -StorageKey &quot; + in_StorageKey + &quot; -StorageUri &quot;&quot;&quot; +  in_storageUri + &quot;&quot;&quot; -Edition &quot;&quot;Standard&quot;&quot; -ServiceObjectiveName &quot; + in_serviceObjectiveName + &quot; -AdministratorLogin &quot; + in_adminSqlLogin + &quot; -AdministratorLoginPassword $(ConvertTo-SecureString -String &quot; + in_sqlAdminPassword +&quot; -AsPlainText -Force)&quot;]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_11" IsScript="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Check import status and wait for the import to complete" CommandText="checkimport.ps1" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;An error occurred while trying to deploy a new server&quot; + vbNewLine  + &quot;Exception: &quot; + exception.ToString]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>