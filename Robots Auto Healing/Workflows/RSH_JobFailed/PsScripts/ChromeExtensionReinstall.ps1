Function Get-RegistryValues {  param(     [Parameter(Mandatory=$true)]   [string]$Path  )        {Push-Location;    Set-Location -Path $Path;    Get-Item . | Select-Object -ExpandProperty property | ForEach-Object {        New-Object psobject -Property @{'Property'=$_;'Value' = (Get-ItemProperty -Path . -Name $_).$_};    }    Pop-Location;}} Function Add-RegistryEntries {    param(        [Parameter(Mandatory=$true)]        [string]$Path,        [Parameter(Mandatory=$true)]        [string]$NewEntryValue    )    {    $RegistryPath = $Path;    $KeyType = "String";    $ExtensionID = $NewEntryValue;    if (-not(Test-Path -Path $RegistryPath)) {        Write-Host -ForegroundColor Red "Registry patch on $RegistryPath does not exist - trying to create it";        try {            New-Item -Path $RegistryPath -Force;        }        catch {            Write-Host -ForegroundColor Red "Failed to create registry path";        }    }    $InstalledExtensionsProperties = Get-RegistryValues -Path $RegistryPath | Select-Object Property;    $InstalledExtensions = Get-RegistryValues -Path $RegistryPath | Select-Object Value;    $Values = 1..20;    if ($InstalledExtensionsProperties -ne $null) {         $NextNumber = Compare-Object $InstalledExtensionsProperties.Property $Values | Select-Object -First 1;        $KeyName = $NextNumber.InputObject;        if ($InstalledExtensions -match $ExtensionID) {            Write-Host -ForegroundColor Green "$ExtensionID is already added.";                }        else {            Write-Host -ForegroundColor Red "The extenion $ExtensionID is not found. Adding it.";            try {                New-ItemProperty -Path $RegistryPath -Name $KeyName -PropertyType $KeyType -Value $ExtensionID;            }            catch {                Write-Host -ForegroundColor Red "Failed to create registry key";            }            }    }    else {            Write-Host -ForegroundColor Red "No extensions already added. Adding the extensions as the first one";        try {            New-ItemProperty -Path $RegistryPath -Name 1 -PropertyType $KeyType -Value $ExtensionID;        }        catch {            Write-Host -ForegroundColor Red "Failed to create registry key";        }    }    }}Stop-Process -Name 'Chrome' -Force -ErrorAction SilentlyContinue;cd 'C:\Program Files\UiPath\Studio\UiPath'; .\SetupExtensions.exe /chromecleanup /silent;cd 'C:\Program Files\UiPath\Studio\UiPath'; .\SetupExtensions.exe /chromepolicyglobal /silent;Write-Host "Processing ExtensionInstallForcelist...";Add-RegistryEntries -Path 'HKLM:\SOFTWARE\Policies\Google\Chrome\ExtensionInstallForcelist' -NewEntryValue 'dkgencfabioofgdmhhjljpkbbchbikbh;https://clients2.google.com/service/update2/crx';Add-RegistryEntries -Path "HKLM:\Software\Policies\Google\Chrome\NativeMessagingAllowlist" -NewEntryValue 'com.uipath.chromenativemsg_v2';